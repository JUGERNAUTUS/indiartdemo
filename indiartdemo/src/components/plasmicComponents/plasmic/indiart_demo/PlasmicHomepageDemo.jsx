// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 46Sa4WMCscwEt6Udy4KXw2
// Component: r5SYRn1_mi-v
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { useScreenVariants as useScreenVariantsl9NDyDlcQ3H } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: l9n-DyDlcQ3h/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_indiart_demo.module.css"; // plasmic-import: 46Sa4WMCscwEt6Udy4KXw2/projectcss
import sty from "./PlasmicHomepageDemo.module.css"; // plasmic-import: r5SYRn1_mi-v/css
import ImageSvgrepoComsvgIcon from "./icons/PlasmicIcon__ImageSvgrepoComsvg"; // plasmic-import: TIflUYTr1rtf/icon
import WalletSvgrepoComsvgIcon from "./icons/PlasmicIcon__WalletSvgrepoComsvg"; // plasmic-import: ffAnZsN_wlRn/icon
import CollectionSvgrepoComsvgIcon from "./icons/PlasmicIcon__CollectionSvgrepoComsvg"; // plasmic-import: 4ztbfV1F6N7H/icon
import ListSvgrepoComsvgIcon from "./icons/PlasmicIcon__ListSvgrepoComsvg"; // plasmic-import: 55qxcVSgRAgt/icon

export const PlasmicHomepageDemo__VariantProps = new Array();

export const PlasmicHomepageDemo__ArgProps = new Array();

function PlasmicHomepageDemo__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsl9NDyDlcQ3H()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox___0LXjq)} />

          <div className={classNames(projectcss.all, sty.freeBox__s9Akk)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vJ3Vs)}
            >
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__e4IQt
                )}
              >
                {"Coming Soon!"}
              </h1>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__d6K3T)}
              >
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__tngC
                  )}
                >
                  {"NFT Ownership for \nAward Winning Photographs"}
                </h1>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"columns"}
                  data-plasmic-override={overrides.columns}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__f6YzJ)}
                  >
                    <ImageSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg__szsEv)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hQ
                      )}
                    >
                      {"Rare Photos by Award Winning Photographers"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jcTjv
                      )}
                    >
                      {
                        "Own a piece of history crafted by the masters of the masters and mistresses of lights and shadows"
                      }
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__dgsFh)}
                  >
                    <WalletSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg___9Vke6)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__muhdk
                      )}
                    >
                      {"NFT Ownership "}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eDb87
                      )}
                    >
                      {
                        "Secure photographs on an immutable blockchain ledger through NFTs. Prove your ownership in milli seconds "
                      }
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__qpzPo)}
                  >
                    <CollectionSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg__pkKXw)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tFx3M
                      )}
                    >
                      {"Trade with peers and other collectors"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__y6Zks
                      )}
                    >
                      {
                        "Swap and trade your collections with other collectors and enthusiasts"
                      }
                    </div>
                  </div>

                  <div className={classNames(projectcss.all, sty.column__hPoL)}>
                    <ListSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg___5QQkg)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__a74T4
                      )}
                    >
                      {"Establish authenticity and chain-of-ownership"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hbjL8
                      )}
                    >
                      {
                        "Verify  the authenticity and provenance of  an art work in a matter of seconds by leveraging the auditability of a blockchain ledger"
                      }
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__q4Lqk)}>
            <div className={classNames(projectcss.all, sty.freeBox__qcIn)} />
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "columns"],
  columns: ["columns"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepageDemo__ArgProps,
      internalVariantPropNames: PlasmicHomepageDemo__VariantProps
    });

    return PlasmicHomepageDemo__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepageDemo";
  } else {
    func.displayName = `PlasmicHomepageDemo.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepageDemo = Object.assign(
  // Top-level PlasmicHomepageDemo renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    columns: makeNodeComponent("columns"),
    // Metadata about props expected for PlasmicHomepageDemo
    internalVariantProps: PlasmicHomepageDemo__VariantProps,
    internalArgProps: PlasmicHomepageDemo__ArgProps
  }
);

export default PlasmicHomepageDemo;
/* prettier-ignore-end */
