// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 46Sa4WMCscwEt6Udy4KXw2
// Component: 1sCXTpIK3TOw
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import {
  classNames,
  createPlasmicElementProxy,
  useTrigger,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import TextInput from "../../../reactComponents/TextInput"; // plasmic-import: pD-B5n7bBeW/component
import Select from "../../../reactComponents/Select"; // plasmic-import: lisclnfVCzN/component
import Select__Option from "../../../reactComponents/Select__Option"; // plasmic-import: OfP8Q6aP8wv/component
import Button10 from "../../../reactComponents/Button10"; // plasmic-import: NzLp13B_qM4h/component
import Button from "../../../reactComponents/Button"; // plasmic-import: H6IfdFc-NOE-/component
import { useScreenVariants as useScreenVariantsl9NDyDlcQ3H } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: l9n-DyDlcQ3h/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_indiart_demo.module.css"; // plasmic-import: 46Sa4WMCscwEt6Udy4KXw2/projectcss
import sty from "./PlasmicNftPage.module.css"; // plasmic-import: 1sCXTpIK3TOw/css
import UserSvgrepoComsvgIcon from "./icons/PlasmicIcon__UserSvgrepoComsvg"; // plasmic-import: 3tV9mqAzov1H/icon
import WalletSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__WalletSvgrepoCom1Svg"; // plasmic-import: 1xp6j2dRFJC7/icon
import EthereumSvgrepoComsvgIcon from "./icons/PlasmicIcon__EthereumSvgrepoComsvg"; // plasmic-import: WQIwI5k2eoMf/icon
import HeartSvgrepoComsvgIcon from "./icons/PlasmicIcon__HeartSvgrepoComsvg"; // plasmic-import: YYHHcclC5f3p/icon
import HamburgerMenuSvgrepoComsvgIcon from "./icons/PlasmicIcon__HamburgerMenuSvgrepoComsvg"; // plasmic-import: uvIcwrHqdjwc/icon
import GridSvgrepoComsvgIcon from "./icons/PlasmicIcon__GridSvgrepoComsvg"; // plasmic-import: qnTpGc39Pg1I/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: x0GLTVm7LqxQ/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28"; // plasmic-import: in7riYaerWVC/icon
import Icon7Icon from "./icons/PlasmicIcon__Icon7"; // plasmic-import: UIKoFJyEh9dY/icon
import RefreshSvgrepoComsvgIcon from "./icons/PlasmicIcon__RefreshSvgrepoComsvg"; // plasmic-import: v5PvUZgp3HyE/icon
import ShareSvgrepoComsvgIcon from "./icons/PlasmicIcon__ShareSvgrepoComsvg"; // plasmic-import: Os6k3HPER99f/icon
import ThreeDotsSvgrepoComsvgIcon from "./icons/PlasmicIcon__ThreeDotsSvgrepoComsvg"; // plasmic-import: xYqQEF3cFFn2/icon
import TimeSvgrepoComsvgIcon from "./icons/PlasmicIcon__TimeSvgrepoComsvg"; // plasmic-import: Lt6uLr7Iz5gE/icon
import WalletSvgrepoComsvgIcon from "./icons/PlasmicIcon__WalletSvgrepoComsvg"; // plasmic-import: ffAnZsN_wlRn/icon
import indiartBlackpngDprif0EjgCle from "./images/indiartBlackpng.png"; // plasmic-import: Dprif0EjgCLE/picture
import manLiftsTireExercisejpgG9IB6KPmD4OP from "./images/manLiftsTireExercisejpg.jpeg"; // plasmic-import: G9iB6KPmD4oP/picture

export const PlasmicNftPage__VariantProps = new Array();

export const PlasmicNftPage__ArgProps = new Array(
  "nftimage",
  "price",
  "slot2",
  "price2",
  "expiry",
  "creator"
);

function PlasmicNftPage__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  const [isN13993859Hover, triggerN13993859HoverProps] = useTrigger(
    "useHover",
    {}
  );

  const [isN13993859NotActive, triggerN13993859NotActiveProps] = useTrigger(
    "usePressed",
    {}
  );

  const [isN13993859FocusWithin, triggerN13993859FocusWithinProps] = useTrigger(
    "useFocusedWithin",
    {}
  );

  const [
    isN13993859FocusVisibleWithin,
    triggerN13993859FocusVisibleWithinProps
  ] = useTrigger("useFocusVisibleWithin", {
    isTextInput: false
  });

  const triggers = {
    hoverNotActiveFocusWithinFocusVisibleWithin_13993859:
      isN13993859Hover &&
      !isN13993859NotActive &&
      isN13993859FocusWithin &&
      isN13993859FocusVisibleWithin
  };

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsl9NDyDlcQ3H()
  });

  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__nZtt0)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__v2GWe)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__znUWk)}
              >
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__s8Sc7)}
                  displayHeight={"50px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"160px"}
                  src={{
                    src: indiartBlackpngDprif0EjgCle,
                    fullWidth: 1500,
                    fullHeight: 1500,
                    aspectRatio: undefined
                  }}
                />

                <TextInput
                  data-plasmic-name={"textInput"}
                  data-plasmic-override={overrides.textInput}
                  className={classNames("__wab_instance", sty.textInput)}
                  showStartIcon={true}
                />

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___8Frvy)}
                >
                  <Select
                    className={classNames("__wab_instance", sty.select__kkr9E)}
                    placeholder={"Explore"}
                  />

                  <Select
                    className={classNames("__wab_instance", sty.select__n9WY4)}
                    placeholder={"Stats"}
                  >
                    <Select__Option
                      className={classNames(
                        "__wab_instance",
                        sty.option__n5Eut
                      )}
                      value={"value1"}
                    >
                      {"Rankings"}
                    </Select__Option>

                    <Select__Option
                      className={classNames(
                        "__wab_instance",
                        sty.option__bIk27
                      )}
                      value={"value2"}
                    >
                      {"Activity"}
                    </Select__Option>
                  </Select>

                  <Select
                    className={classNames("__wab_instance", sty.select__xuW9J)}
                    placeholder={"Resources"}
                  >
                    <Select__Option
                      className={classNames(
                        "__wab_instance",
                        sty.option__gqsxB
                      )}
                      value={"value1"}
                    >
                      {"Help Center"}
                    </Select__Option>

                    <Select__Option
                      className={classNames(
                        "__wab_instance",
                        sty.option__toafl
                      )}
                      value={"value2"}
                    >
                      {"Platform Status"}
                    </Select__Option>

                    <Select__Option
                      className={classNames("__wab_instance", sty.option__gOQ)}
                      value={"value2 2"}
                    >
                      {"Partners"}
                    </Select__Option>

                    <Select__Option
                      className={classNames(
                        "__wab_instance",
                        sty.option___5BX8N
                      )}
                      value={"value2 3"}
                    >
                      {"Gas-Free MarketPlace"}
                    </Select__Option>

                    <Select__Option
                      className={classNames(
                        "__wab_instance",
                        sty.option__eDrfs
                      )}
                      value={"value2 4"}
                    >
                      {"Blog"}
                    </Select__Option>

                    <Select__Option
                      className={classNames(
                        "__wab_instance",
                        sty.option__ludxv
                      )}
                      value={"value2 5"}
                    >
                      {"Docs"}
                    </Select__Option>

                    <Select__Option
                      className={classNames(
                        "__wab_instance",
                        sty.option__zMcle
                      )}
                      value={"value2 6"}
                    >
                      {"NewsLetter"}
                    </Select__Option>
                  </Select>
                </p.Stack>

                <a
                  data-plasmic-name={"link"}
                  data-plasmic-override={overrides.link}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link
                  )}
                  href={"https://www.plasmic.app/"}
                >
                  {"Create"}
                </a>
              </p.Stack>

              <UserSvgrepoComsvgIcon
                className={classNames(projectcss.all, sty.svg__ucy9A, {
                  [sty.svg___hover__notPressed__focusedWithin__focusVisibleWithin__ucy9A5Oa51]:
                    triggers.hoverNotActiveFocusWithinFocusVisibleWithin_13993859
                })}
                role={"img"}
                data-plasmic-trigger-props={[
                  triggerN13993859HoverProps,
                  triggerN13993859NotActiveProps,
                  triggerN13993859FocusWithinProps,
                  triggerN13993859FocusVisibleWithinProps
                ]}
              />

              <WalletSvgrepoCom1SvgIcon
                className={classNames(projectcss.all, sty.svg__wFmA8)}
                role={"img"}
              />
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__lJg4)}>
            <div className={classNames(projectcss.all, sty.columns__md9RJ)}>
              <div className={classNames(projectcss.all, sty.column__w27S)}>
                <div className={classNames(projectcss.all, sty.freeBox__cukse)}>
                  <EthereumSvgrepoComsvgIcon
                    className={classNames(projectcss.all, sty.svg__w2Dce)}
                    role={"img"}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fVxwS)}
                  >
                    <HeartSvgrepoComsvgIcon
                      className={classNames(projectcss.all, sty.svg___1U3Cn)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lq5Xk
                      )}
                    >
                      {"321"}
                    </div>
                  </p.Stack>
                </div>

                {p.renderPlasmicSlot({
                  defaultContents: (
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__zpZl)}
                      displayHeight={"700px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: manLiftsTireExercisejpgG9IB6KPmD4OP,
                        fullWidth: 4096,
                        fullHeight: 2732,
                        aspectRatio: undefined
                      }}
                    />
                  ),

                  value: args.nftimage
                })}

                <div className={classNames(projectcss.all, sty.freeBox__kFf6Y)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__l9Eki)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__lI2N2)}
                    >
                      <HamburgerMenuSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__sNIi9)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mhuxX
                        )}
                      >
                        {"Description"}
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__j3Xr)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__h2Nnh
                      )}
                    >
                      {"Created by Raj"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yjrE6
                      )}
                    >
                      {
                        "A collaboration from Wylie Styles and VQGAN that explores the Future Proofing culture in time and space"
                      }
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__v1Vzt)}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__bxwLt)}
                    >
                      <GridSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__sNSma)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__j0Dmw
                        )}
                      >
                        {"Properties"}
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__ti5Hj)}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__wisqm)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iualT
                        )}
                      >
                        {"Character"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__h0CYk
                        )}
                      >
                        {"Abstracted trait"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gTl5
                        )}
                      >
                        {"2% have this trait"}
                      </div>
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__jT561)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__lv7Wx)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sb5Dn
                      )}
                    >
                      {"About Future"}
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__uj1I)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__jntK7)}
                  />

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__lYh)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__eLrmd)}
                      displayHeight={"100px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100px"}
                      loading={"lazy"}
                      src={{
                        src: manLiftsTireExercisejpgG9IB6KPmD4OP,
                        fullWidth: 4096,
                        fullHeight: 2732,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gdqD1
                      )}
                    >
                      {
                        "A collaboration from Wylie Styles and VQGAN that explores the Future Proofing of culture in time and space"
                      }
                    </div>
                  </p.Stack>

                  <div
                    className={classNames(projectcss.all, sty.columns__lIdyL)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__qVgnc)}
                    >
                      <Icon4Icon
                        className={classNames(projectcss.all, sty.svg__bKFft)}
                        role={"img"}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__mc7Rm)}
                    >
                      <Icon28Icon
                        className={classNames(projectcss.all, sty.svg__fmKhh)}
                        role={"img"}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__rNtqb)}
                    >
                      <Icon7Icon
                        className={classNames(projectcss.all, sty.svg__y1FxE)}
                        role={"img"}
                      />
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox___3A2S)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__qLrsq)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__enX0Y
                      )}
                    >
                      {"Details"}
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__r2DW5)}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__cJ6Hm)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__z3EFt
                      )}
                    >
                      {"Contract Address"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tu9Aj
                      )}
                    >
                      {"0x495f...7b5e"}
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__qx6Tb)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qZfMi
                      )}
                    >
                      {"Token ID"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__son8X
                      )}
                    >
                      {"85237985525734684"}
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__ujfQw)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yAbfL
                      )}
                    >
                      {"Token Standard"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nRir5
                      )}
                    >
                      {"ERC-1155"}
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__qMcQ)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sfgZu
                      )}
                    >
                      {"Blockchain"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__k0Cnu
                      )}
                    >
                      {"Ethereum"}
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__rs1LV)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jvY1R
                      )}
                    >
                      {"Metadata"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wjew7
                      )}
                    >
                      {"Centralized"}
                    </div>
                  </div>
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column___4PrZl)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox___4Pivm)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nw9O7
                    )}
                  >
                    {"Future Proof"}
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.columns__q9U6)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__aVzTj)}
                    >
                      <RefreshSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg___1BHyw)}
                        role={"img"}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__t0YjG)}
                    >
                      <ShareSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__m1Vxr)}
                        role={"img"}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__gYhJx)}
                    >
                      <ThreeDotsSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__s4EB2)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </div>

                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    sty.h1__qtz1
                  )}
                >
                  {p.renderPlasmicSlot({
                    defaultContents: "Future Proof",
                    value: args.slot2,
                    className: classNames(sty.slotTargetSlot2)
                  })}
                </h1>

                <div className={classNames(projectcss.all, sty.freeBox__mkefS)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__j9HIj
                    )}
                  >
                    {"Owned by Adam"}
                  </div>

                  <HeartSvgrepoComsvgIcon
                    className={classNames(projectcss.all, sty.svg__vTf61)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v55QD
                    )}
                  >
                    {"1.0k Favourites"}
                  </div>
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__chmCj)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__kPbPc)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__oqeho)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__uqkjf
                        )}
                      >
                        <TimeSvgrepoComsvgIcon
                          className={classNames(projectcss.all, sty.svg__tl9Q)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ge2Kg
                          )}
                        >
                          {"Sale ends February 8, 2022 at 3:40am IST "}
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__usswn
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__df1D
                        )}
                      >
                        {"Current Price"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jGzs9
                        )}
                      >
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            sty.h1__juKef
                          )}
                        >
                          {p.renderPlasmicSlot({
                            defaultContents: "1.9 ",
                            value: args.price,
                            className: classNames(sty.slotTargetPrice)
                          })}
                        </h1>
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__a0RE
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__iWAp
                          )}
                        >
                          <Button10
                            data-plasmic-name={"buy"}
                            data-plasmic-override={overrides.buy}
                            className={classNames("__wab_instance", sty.buy)}
                            showStartIcon={true}
                            startIcon={
                              <WalletSvgrepoComsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__h8RMr
                                )}
                                role={"img"}
                              />
                            }
                          >
                            {"Buy Now"}
                          </Button10>

                          <Button
                            data-plasmic-name={"offer"}
                            data-plasmic-override={overrides.offer}
                            className={classNames("__wab_instance", sty.offer)}
                            showEndIcon={true}
                          >
                            {"Make offer"}
                          </Button>
                        </p.Stack>
                      </p.Stack>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__jWrTw)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ug3Pj
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wr7J6
                          )}
                        >
                          {"Price History"}
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___8EiOw
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___3V4Qw
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8M5P7
                            )}
                          >
                            {"Listings"}
                          </div>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ulrgV
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.columns__pqsbL
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__g8Iyw
                              )}
                            >
                              <p.Stack
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__tvhEn
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___19YkS
                                  )}
                                >
                                  {"Price"}
                                </div>

                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__axFaX
                                  )}
                                >
                                  {p.renderPlasmicSlot({
                                    defaultContents: "50 ETH",
                                    value: args.price2
                                  })}
                                </div>
                              </p.Stack>
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__joKpq
                              )}
                            >
                              <p.Stack
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__tekFd
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__s5C4I
                                  )}
                                >
                                  {"Expiration"}
                                </div>

                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__asztZ
                                  )}
                                >
                                  {p.renderPlasmicSlot({
                                    defaultContents: "in 6 days",
                                    value: args.expiry
                                  })}
                                </div>
                              </p.Stack>
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__bL64
                              )}
                            >
                              <p.Stack
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__ulrLg
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___131Ol
                                  )}
                                >
                                  {"From"}
                                </div>

                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__wf4H4
                                  )}
                                >
                                  {p.renderPlasmicSlot({
                                    defaultContents: "Markadan",
                                    value: args.creator
                                  })}
                                </div>
                              </p.Stack>
                            </div>
                          </div>
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__wMdpc
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__beelg
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__w4WfR
                            )}
                          >
                            {"Offers"}
                          </div>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___8MO1
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.columns__uITp
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__pGtgV
                              )}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__sA5K
                              )}
                            />
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </p.Stack>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: ["root", "textInput", "textbox", "link", "buy", "offer"],
  textInput: ["textInput", "textbox"],
  link: ["link"],
  buy: ["buy"],
  offer: ["offer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicNftPage__ArgProps,
      internalVariantPropNames: PlasmicNftPage__VariantProps
    });

    return PlasmicNftPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicNftPage";
  } else {
    func.displayName = `PlasmicNftPage.${nodeName}`;
  }
  return func;
}

export const PlasmicNftPage = Object.assign(
  // Top-level PlasmicNftPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    textInput: makeNodeComponent("textInput"),
    link: makeNodeComponent("link"),
    buy: makeNodeComponent("buy"),
    offer: makeNodeComponent("offer"),
    // Metadata about props expected for PlasmicNftPage
    internalVariantProps: PlasmicNftPage__VariantProps,
    internalArgProps: PlasmicNftPage__ArgProps
  }
);

export default PlasmicNftPage;
/* prettier-ignore-end */
