// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 46Sa4WMCscwEt6Udy4KXw2
// Component: e1I9aJr6UA8
import * as React from "react";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_indiart_demo.module.css"; // plasmic-import: 46Sa4WMCscwEt6Udy4KXw2/projectcss
import sty from "./PlasmicProfileHover.module.css"; // plasmic-import: e1I9aJr6UA8/css
import UserSvgrepoComsvgIcon from "./icons/PlasmicIcon__UserSvgrepoComsvg"; // plasmic-import: 3tV9mqAzov1H/icon

export const PlasmicProfileHover__VariantProps = new Array();

export const PlasmicProfileHover__ArgProps = new Array();

function PlasmicProfileHover__RenderFunc(props) {
  const { variants, args, overrides, forNode } = props;
  return (
    <UserSvgrepoComsvgIcon
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_tokens,
        sty.root
      )}
      role={"img"}
    />
  );
}

const PlasmicDescendants = {
  root: ["root"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicProfileHover__ArgProps,
      internalVariantPropNames: PlasmicProfileHover__VariantProps
    });

    return PlasmicProfileHover__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicProfileHover";
  } else {
    func.displayName = `PlasmicProfileHover.${nodeName}`;
  }
  return func;
}

export const PlasmicProfileHover = Object.assign(
  // Top-level PlasmicProfileHover renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    // Metadata about props expected for PlasmicProfileHover
    internalVariantProps: PlasmicProfileHover__VariantProps,
    internalArgProps: PlasmicProfileHover__ArgProps
  }
);

export default PlasmicProfileHover;
/* prettier-ignore-end */
